/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.List;
import java.util.ArrayList;
class Solution {
     List<String> result=new ArrayList<String>();
     List<Integer> list=new ArrayList<Integer>();
    public List<String> binaryTreePaths(TreeNode root) {
        if(root==null){
            return result;
        }
        list.add(root.val);
        if(root.left==null&&root.right==null){
            result.add(transfer(list));
        }
        binaryTreePaths(root.left);
        binaryTreePaths(root.right);
         list.remove(list.size()-1);
        return result;
    }
    public String transfer(List<Integer> list){
        StringBuffer sb=new StringBuffer();
        for(int i=0;i<list.size()-1;i++){
            sb.append(list.get(i)+"->");
        }
        sb.append(list.get(list.size()-1));
        return sb.toString();
    }
}